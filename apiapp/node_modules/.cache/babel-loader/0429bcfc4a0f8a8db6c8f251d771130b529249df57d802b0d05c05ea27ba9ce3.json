{"ast":null,"code":"var _jsxFileName = \"/Users/tedbaird/Desktop/software_architecture_project/apiapp/src/component/RatingHistogram.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RatingHistogram extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchRatingsFromServer = () => {\n      // Simulate fetching existing ratings from a server\n      const mockRatings = [3, 4, 5, 3, 2, 4, 5, 4, 3];\n      this.setState({\n        ratings: mockRatings\n      });\n    };\n    this.handleRatingClick = rating => {\n      // Simulate sending a new rating to the server \n      this.sendRatingToServer(rating);\n      this.setState(prevState => ({\n        ratings: [...prevState.ratings, rating],\n        selectedRating: rating\n      }));\n    };\n    this.sendRatingToServer = rating => {\n      // Simulate sending a new rating to the server\n      console.log(`Sending rating ${rating} to the server...`);\n    };\n    this.state = {\n      ratings: [],\n      selectedRating: 0\n    };\n  }\n  componentDidMount() {\n    // Simulate fetching existing ratings from a server\n    this.fetchRatingsFromServer();\n  }\n  render() {\n    const {\n      ratings,\n      selectedRating\n    } = this.state;\n    const ratingCounts = [0, 0, 0, 0, 0];\n    ratings.forEach(rating => {\n      ratingCounts[rating - 1]++;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rate this website:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [1, 2, 3, 4, 5].map(rating => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handleRatingClick(rating),\n          className: selectedRating === rating ? \"selected\" : \"\",\n          children: [rating, \" star\"]\n        }, rating, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rating Histogram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ratingCounts.map((count, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [index + 1, \" star: \", count, \" votes\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default RatingHistogram;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","RatingHistogram","constructor","props","fetchRatingsFromServer","mockRatings","setState","ratings","handleRatingClick","rating","sendRatingToServer","prevState","selectedRating","console","log","state","componentDidMount","render","ratingCounts","forEach","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","className","count","index"],"sources":["/Users/tedbaird/Desktop/software_architecture_project/apiapp/src/component/RatingHistogram.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nclass RatingHistogram extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ratings: [], \n            selectedRating: 0,\n        };\n    }\n\n    componentDidMount() {\n        // Simulate fetching existing ratings from a server\n        this.fetchRatingsFromServer();\n    }\n\n    fetchRatingsFromServer = () => {\n        // Simulate fetching existing ratings from a server\n        const mockRatings = [3, 4, 5, 3, 2, 4, 5, 4, 3];\n        this.setState({ ratings: mockRatings });\n    };\n\n    handleRatingClick = (rating) => {\n        // Simulate sending a new rating to the server \n        this.sendRatingToServer(rating);\n\n        \n        this.setState((prevState) => ({\n            ratings: [...prevState.ratings, rating],\n            selectedRating: rating,\n        }));\n    };\n\n    sendRatingToServer = (rating) => {\n        // Simulate sending a new rating to the server\n        console.log(`Sending rating ${rating} to the server...`);\n    };\n\n    render() {\n        const { ratings, selectedRating } = this.state;\n\n        \n        const ratingCounts = [0, 0, 0, 0, 0];\n        ratings.forEach((rating) => {\n            ratingCounts[rating - 1]++;\n        });\n\n        return (\n            <div>\n                <h3>Rate this website:</h3>\n                <div>\n                    \n                    {[1, 2, 3, 4, 5].map((rating) => (\n                        <button\n                            key={rating}\n                            onClick={() => this.handleRatingClick(rating)}\n                            className={selectedRating === rating ? \"selected\" : \"\"}\n                        >\n                            {rating} star\n                        </button>\n                    ))}\n                </div>\n\n                \n                <h3>Rating Histogram</h3>\n                <div>\n                    {ratingCounts.map((count, index) => (\n                        <div key={index}>\n                            {index + 1} star: {count} votes\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RatingHistogram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}