{"ast":null,"code":"var _jsxFileName = \"/Users/tedbaird/Desktop/software_architecture_project/apiapp/src/component/APIs.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass APIs extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchRandomAPI = () => {\n      fetch('https://api.publicapis.org/random').then(res => res.json()).then(data => {\n        this.setState({\n          isLoaded: true,\n          apis: data.entries\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n    this.saveToMongoDB = () => {\n      const {\n        generatedLink\n      } = this.state;\n\n      // Send the generated link to the server\n      fetch('http://localhost:3000/api/save-api', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          API: 'Generated API',\n          Description: 'Generated Description',\n          Link: generatedLink\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n      }).catch(error => {\n        console.error('Error saving to MongoDB:', error);\n      });\n    };\n    this.state = {\n      error: null,\n      isLoaded: false,\n      apis: []\n    };\n  }\n  componentDidMount() {\n    this.fetchRandomAPI();\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      apis\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.fetchRandomAPI,\n        children: \"Generate Random API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: apis.map(api => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"API: \", api.API]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", api.Description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Link: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: api.Link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: api.Link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(LinkSaver, {\n            link: generatedLink,\n            onSave: this.saveToMongoDB\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)]\n        }, api.API, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default APIs;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","APIs","constructor","props","fetchRandomAPI","fetch","then","res","json","data","setState","isLoaded","apis","entries","error","saveToMongoDB","generatedLink","state","method","headers","body","JSON","stringify","API","Description","Link","console","log","catch","componentDidMount","render","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","message","map","api","href","target","rel","LinkSaver","link","onSave"],"sources":["/Users/tedbaird/Desktop/software_architecture_project/apiapp/src/component/APIs.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nclass APIs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            apis: []\n        };\n    }\n\n    fetchRandomAPI = () => {\n        fetch('https://api.publicapis.org/random')\n            .then(res => res.json())\n            .then(\n                (data) => {\n                    this.setState({\n                        isLoaded: true,\n                        apis: data.entries\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            );\n    }\n\n    componentDidMount() {\n        this.fetchRandomAPI();\n    }\n\n    saveToMongoDB = () => {\n        const { generatedLink } = this.state;\n    \n        // Send the generated link to the server\n        fetch('http://localhost:3000/api/save-api', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            API: 'Generated API', \n            Description: 'Generated Description',\n            Link: generatedLink,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            console.log(data);\n          })\n          .catch((error) => {\n            console.error('Error saving to MongoDB:', error);\n          });\n      };\n\n\n\n    render() {\n        const { error, isLoaded, apis } = this.state;\n        return (\n            <div>\n                <button onClick={this.fetchRandomAPI}>Generate Random API</button>\n                {error && <div>Error: {error.message}</div>}\n                {!isLoaded ? (\n                    <div>Loading...</div>\n                ) : (\n                    <div>\n                        {apis.map((api) => (\n                            <div key={api.API}>\n                                <p>API: {api.API}</p>\n                                <p>Description: {api.Description}</p>\n                                <p>\n                                    Link: <a href={api.Link} target=\"_blank\" rel=\"noopener noreferrer\">{api.Link}</a>\n                                </p>\n                                <LinkSaver link={generatedLink} onSave={this.saveToMongoDB} />\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default APIs;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,IAAI,SAASH,SAAS,CAAC;EACzBI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAQjBC,cAAc,GAAG,MAAM;MACnBC,KAAK,CAAC,mCAAmC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CACAG,IAAI,IAAK;QACN,IAAI,CAACC,QAAQ,CAAC;UACVC,QAAQ,EAAE,IAAI;UACdC,IAAI,EAAEH,IAAI,CAACI;QACf,CAAC,CAAC;MACN,CAAC,EACAC,KAAK,IAAK;QACP,IAAI,CAACJ,QAAQ,CAAC;UACVC,QAAQ,EAAE,IAAI;UACdG;QACJ,CAAC,CAAC;MACN,CACJ,CAAC;IACT,CAAC;IAAA,KAMDC,aAAa,GAAG,MAAM;MAClB,MAAM;QAAEC;MAAc,CAAC,GAAG,IAAI,CAACC,KAAK;;MAEpC;MACAZ,KAAK,CAAC,oCAAoC,EAAE;QAC1Ca,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,GAAG,EAAE,eAAe;UACpBC,WAAW,EAAE,uBAAuB;UACpCC,IAAI,EAAET;QACR,CAAC;MACH,CAAC,CAAC,CACCV,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;QACdiB,OAAO,CAACC,GAAG,CAAClB,IAAI,CAAC;MACnB,CAAC,CAAC,CACDmB,KAAK,CAAEd,KAAK,IAAK;QAChBY,OAAO,CAACZ,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN,CAAC;IApDC,IAAI,CAACG,KAAK,GAAG;MACTH,KAAK,EAAE,IAAI;MACXH,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE;IACV,CAAC;EACL;EAqBAiB,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACzB,cAAc,CAAC,CAAC;EACzB;EA4BA0B,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEhB,KAAK;MAAEH,QAAQ;MAAEC;IAAK,CAAC,GAAG,IAAI,CAACK,KAAK;IAC5C,oBACIjB,OAAA;MAAA+B,QAAA,gBACI/B,OAAA;QAAQgC,OAAO,EAAE,IAAI,CAAC5B,cAAe;QAAA2B,QAAA,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACjEtB,KAAK,iBAAId,OAAA;QAAA+B,QAAA,GAAK,SAAO,EAACjB,KAAK,CAACuB,OAAO;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC1C,CAACzB,QAAQ,gBACNX,OAAA;QAAA+B,QAAA,EAAK;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAErBpC,OAAA;QAAA+B,QAAA,EACKnB,IAAI,CAAC0B,GAAG,CAAEC,GAAG,iBACVvC,OAAA;UAAA+B,QAAA,gBACI/B,OAAA;YAAA+B,QAAA,GAAG,OAAK,EAACQ,GAAG,CAAChB,GAAG;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBpC,OAAA;YAAA+B,QAAA,GAAG,eAAa,EAACQ,GAAG,CAACf,WAAW;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrCpC,OAAA;YAAA+B,QAAA,GAAG,QACO,eAAA/B,OAAA;cAAGwC,IAAI,EAAED,GAAG,CAACd,IAAK;cAACgB,MAAM,EAAC,QAAQ;cAACC,GAAG,EAAC,qBAAqB;cAAAX,QAAA,EAAEQ,GAAG,CAACd;YAAI;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClF,CAAC,eACJpC,OAAA,CAAC2C,SAAS;YAACC,IAAI,EAAE5B,aAAc;YAAC6B,MAAM,EAAE,IAAI,CAAC9B;UAAc;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GANxDG,GAAG,CAAChB,GAAG;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOZ,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEd;AACJ;AAEA,eAAenC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}